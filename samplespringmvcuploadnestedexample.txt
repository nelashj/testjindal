var fd2 = new FormData();
$.each($("input[type=file]"), function(i, obj) {
	console.log("**********i"+i)
    $.each(obj.files,function(j, file){
	console.log("####"+j)
    	fd2.append('files['+i+']', file);
    })
});
var car = {name:"nelash1", lastname:"500"};
fd2.append("name1","nelash22");
fd2.append("class1.name","nelash11");
fd2.append("class1.lastname","jindal");
$.ajax({
  url: '/save',
  data: fd2,
  processData: false,
  contentType: false,
  type: 'POST',
  success: function(data){
    alert(data);
  }
});


 @RequestMapping(value = "/save", method = RequestMethod.POST)
		public String save(
				@ModelAttribute FileUploadForm uploadForm,
						Model map, HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse) throws IOException {
			
			List<MultipartFile> files = uploadForm.getFiles();
			System.out.println("***"+files.size());
			List<String> fileNames = new ArrayList<String>();
			
			if(null != files && files.size() > 0) {
				for (MultipartFile multipartFile : files) {

					String fileName = multipartFile.getOriginalFilename();
					fileNames.add(fileName);
					System.out.println("***"+fileName);
					//System.out.println(multipartFile.getInputStream().read(new byte[2048]));
					//byte b[]=new byte[2048];
					String line;
					BufferedReader bufferedInputStream= new BufferedReader(new InputStreamReader(multipartFile.getInputStream()));
					BufferedWriter bufferedOutputStream= new BufferedWriter(new FileWriter(new File("C:\\Personal\\"+fileName)));
					while((line=bufferedInputStream.readLine())!=null){
						bufferedOutputStream.write(line);
					}
					bufferedOutputStream.close();
					//Handle file content - multipartFile.getInputStream()
				}
			}
			System.out.println("**"+uploadForm.getName1());
			System.out.println("**"+uploadForm.getClass1().getLastname());
			System.out.println("**"+uploadForm.getClass1().getName());
			map.addAttribute("files", fileNames);
			return "file_upload_success.jsp";
		}
